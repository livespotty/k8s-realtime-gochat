---
apiVersion: apps/v1
kind: Deployment # Type of Kubernetes resource
metadata:
  name: go-chat # Name of the Kubernetes resource
spec:
  replicas: 1 # Number of pods to run at any given time; this meant to run with =1 otherwise chat app will not work properly
  selector:
    matchLabels:
      app: go-chat # This deployment applies to any Pods matching the specified label
  template: # This deployment will create a set of pods using the configurations in this template
    metadata:
      labels: # The labels that will be applied to all of the pods in this deployment
        app: go-chat
    spec: # Spec for the container which will run in the Pod
      containers:
        - name: go-chat
          image: livecontainer/go-realtime-chat:1.0.0
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          ports:
            - containerPort: 8090 # Should match the port number that the Go application listens on
          livenessProbe: # To check the health of the Pod
            httpGet:
              path: /health
              port: 8090
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 15
            timeoutSeconds: 5
          readinessProbe: # To check if the Pod is ready to serve traffic or not
            httpGet:
              path: /readiness
              port: 8090
              scheme: HTTP
            initialDelaySeconds: 5
            timeoutSeconds: 1
---
apiVersion: v1
kind: Service # Type of kubernetes resource
metadata:
  name: go-chat # Name of the resource
spec:
  type: NodePort # A port is opened on each node in your cluster via Kube proxy.
  ports: # Take incoming HTTP requests on port 8080 and forward them to the targetPort of 8090
    - name: http
      port: 8080
      targetPort: 8090
  selector:
    app: go-chat
